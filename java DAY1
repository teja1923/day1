1)public class FactorialIterative {
    public static int factorial(int n) {
        int result = 1;
        for (int i = 1; i <= n; i++) {
            result *= i;
        }
        return result;
    }

    public static void main(String[] args) {
        int num = 5;
        int result = factorial(num);
        System.out.println("Factorial of " + num + " is " + result);
    }
}

OUT PUT : Factorial of 5 is 120


2 ) public class FactorialRecursive {
    public static int factorial(int n) {
        if (n == 0) {
            return 1;
        } else {
            return n * factorial(n - 1);
        }
    }

    public static void main(String[] args) {
        int num = 5;
        int result = factorial(num);
        System.out.println("Factorial of " + num + " is " + result);
    }
}


3 ) import java.util.stream.IntStream;

public class FactorialJava8 {
    public static int factorial(int n) {
        return IntStream.rangeClosed(1, n).reduce(1, (a, b) -> a * b);
    }

    public static void main(String[] args) {
        int num = 5;
        int result = factorial(num);
        System.out.println("Factorial of " + num + " is " + result);
    }
}

4) import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class SortNames {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<String> names = new ArrayList<>();

        System.out.println("Enter names (one per line, enter 'quit' to finish):");
        while (true) {
            String input = scanner.nextLine();
            if (input.equalsIgnoreCase("quit")) {
                break;
            }
            names.add(input);
        }

        System.out.print("Order (A/D): ");
        char order = scanner.next().charAt(0);

        if (order == 'A' || order == 'a') {
            Collections.sort(names);
            System.out.println("Sorted names in ascending order:");
        } else if (order == 'D' || order == 'd') {
            Collections.sort(names);
            Collections.reverse(names);
            System.out.println("Sorted names in descending order:");
        } else {
            System.out.println("Invalid order choice. Exiting.");
            return;
        }

        for (String name : names) {
            System.out.println(name);
        }
    }
}

5) import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SpecialCharacters {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a line of text: ");
        String input = scanner.nextLine();

        Pattern pattern = Pattern.compile("[^a-zA-Z0-9]");
        Matcher matcher = pattern.matcher(input);

        int specialCharCount = 0;
        System.out.print("Special characters: ");
        while (matcher.find()) {
            System.out.print(matcher.group() + " ");
            specialCharCount++;
        }
        System.out.println();
        System.out.println("Number of special characters: " + specialCharCount);
    }
}

6) import java.util.Scanner;

public class VowelCounter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a statement: ");
        String input = scanner.nextLine();

        int vowelCount = 0;
        for (char c : input.toLowerCase().toCharArray()) {
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                vowelCount++;
            }
        }

        System.out.println("Number of vowels = " + vowelCount);
    }
}

7) import java.util.Scanner;

public class ConsonantVowelSeparator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a word: ");
        String input = scanner.nextLine();

        String consonants = "";
        String vowels = "";

        for (char c : input.toLowerCase().toCharArray()) {
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                vowels += c + " ";
            } else if (c >= 'a' && c <= 'z') {
                consonants += c + " ";
            }
        }

        System.out.println("Consonants: " + consonants.trim());
        System.out.println("Vowels: " + vowels.trim());
    }
}

8) import java.util.Scanner;

public class CharacterSearch {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the string: ");
        String input = scanner.nextLine();
        System.out.print("Enter the character to be searched: ");
        char searchChar = scanner.next().charAt(0);

        boolean found = false;
        int index = -1;
        for (int i = 0; i < input.length(); i++) {
            if (input.charAt(i) == searchChar) {
                found = true;
                index = i;
                break;
            }
        }

        if (found) {
            System.out.println(searchChar + " is found in string at index: " + index);
        } else {
            System.out.println(searchChar + " is not found in string");
        }
    }
}

9) import java.util.Arrays;
import java.util.Scanner;

public class AlphabeticalOrder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the word: ");
        String input = scanner.nextLine();

        char[] chars = input.toUpperCase().toCharArray();
        Arrays.sort(chars);
        String reverseOrder = new StringBuilder(new String(chars)).reverse().toString();

        System.out.println("Alphabetical Order: " + reverseOrder);
    }
}

10) import java.util.Scanner;

public class RemoveVowels {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();

        String output = "";
        for (int i = 0; i < input.length(); i++) {
            char c = input.charAt(i);
            if (!isVowel(c)) {
                output += c;
            }
        }

        System.out.println("The string without vowels is: " + output);
    }

    public static boolean isVowel(char c) {
        c = Character.toUpperCase(c);
        return c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';
    }
              }
